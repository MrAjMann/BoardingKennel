// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @unique @default(cuid())
  firstName     String?
  lastName      String?
  about         String?
  phone         String?
  email         String?   @unique
  password      String    @default("testing")
  address       Address?  @relation(fields: [id], references: [addressId])
  emailVerified DateTime?
  image         String?
  pets          Pets[]

  accounts Account[]
  sessions Session[]
  @@unique([id, email])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Pets {
  id               String   @id @default(cuid())
  createdAt        DateTime @default(now())
  owner            User     @relation(fields: [userEmail], references: [email])
  userEmail        String
  petName          String?
  petAge           Int?
  petGender        String?
  petDesexedStatus String?

  @@unique([id])
}

model Address {
  id           Int     @id @unique
  addressId    String? @unique
  unitNumber   String?
  streetNumber Int
  streetName   String
  suburb       String
  state        String
  postcode     String
  User         User?


  @@unique([id, addressId])
}
